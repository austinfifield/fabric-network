#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'


networks:
  fabricbros:

services:
# usage docker exec -it cli bash

  cli:
    container_name: cli
    image: hyperledger/fabric-tools${IMAGE_TAG_FABRIC}
    tty: true
    environment:
      - CHANNEL=${CHANNEL}
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix://host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    working_dir:  /opt/gopath/src/chaincodedev
    command: /bin/bash -c './scripts/initChannels.sh'
    volumes:
        - /var/run/:/host/var/run/
        - ${FABRIC_CC_SRC}:/opt/gopath/src/chaincode
        - ./crypto/${FAB_CONFIG_GEN_VERS}/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./crypto/${FAB_CONFIG_GEN_VERS}:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        - ./:/opt/gopath/src/chaincodedev/
        - ${GOPATH}:/opt/gopath

    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
#      - peer1.org1.example.com
#      - peer0.org2.example.com
#      - peer1.org2.example.com
    networks:
      - fabricbros


#  chaincode:
#    container_name: chaincode
#    image: hyperledger/fabric-ccenv${IMAGE_TAG_FABRIC}
#    tty: true
#    environment:
#      - GOPATH=/opt/gopath
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      - CORE_LOGGING_LEVEL=DEBUG
#      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#      - CORE_CHAINCODE_LOGGING_SHIM=DEBUG
#      - CORE_PEER_ID=peer0.org1.example.com
#      - CORE_PEER_ADDRESS=peer0.org1.example.com:7052 # maybe 127.0.0.1:7052
#      - CORE_PEER_LOCALMSPID=DEFAULT
#      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp
#    working_dir: /opt/gopath/src/chaincode
#    command: /bin/bash -c 'sleep 60000'
#    volumes:
#        - /var/run/:/host/var/run
#        - ./../crypto/${FAB_CONFIG_GEN_VERS}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peer:ro
#        - ${FABRIC_CC_SRC}:/opt/gopath/src/chaincode
#        #MODIFY THIS
#    depends_on:
#      - orderer.example.com
#      - peer0.org1.example.com
#    networks:
#    - fabricbros

##################################################################
##################################################################TODO the ca will need to be modified when new certs are generated
  ca0:
    image: hyperledger/fabric-ca${IMAGE_TAG_FABRIC_CA}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -n ca0 ${V11_IDENTITIES_ALLOWREMOVE} ${V11_AFFILIATIONS_ALLOWREMOVE} --registry.maxenrollments -1 --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/fcf776b02a05600408d0be9d9752afc59f64950b721cacb363b5b95a0fea6216_sk -b admin:adminpw ${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_CA_TLS} --tls.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --tls.keyfile /etc/hyperledger/fabric-ca-server-config/fcf776b02a05600408d0be9d9752afc59f64950b721cacb363b5b95a0fea6216_sk -d'

    volumes:
      - ./crypto/${FAB_CONFIG_GEN_VERS}/crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config:ro
    container_name: capeerorg1
    networks:
      - fabricbros
##################################################################
##################################################################
#  ca1:
#    image: hyperledger/fabric-ca${IMAGE_TAG_FABRIC_CA}
#    environment:
#      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
#    ports:
#      - "8054:7054"
#    command: sh -c 'fabric-ca-server start --registry.maxenrollments -1 --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/b59bba37975dafcc4a93984aa01d3d29b64894617db9e0c9a2d486b5273cbd27_sk -b admin:adminpw ${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_CA_TLS} --tls.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --tls.keyfile /etc/hyperledger/fabric-ca-server-config/b59bba37975dafcc4a93984aa01d3d29b64894617db9e0c9a2d486b5273cbd27_sk -d'
#    volumes:
#      - ./crypto/${FAB_CONFIG_GEN_VERS}/crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config:ro
#    container_name: ca_peerOrg2

##################################################################
##################################################################
  orderer.example.com:
    extends:
      file: base/docker-compose-base.yaml
      service: orderer.example.com
    container_name: orderer.example.com
    networks:
      - fabricbros

##################################################################
##################################################################
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.example.com
    networks:
      - fabricbros
    depends_on:
          - orderer.example.com
##################################################################
##################################################################
#  peer1.org1.example.com:
#    container_name: peer1.org1.example.com
#    extends:
#      file:  base/docker-compose-base.yaml
#      service: peer1.org1.example.com
#    networks:
#      - fabricbros
#    depends_on:
#           - orderer.example.com
#           - peer0.org1.example.com
##################################################################
##################################################################
#  peer0.org2.example.com:
#    container_name: peer0.org2.example.com
#    extends:
#      file:  base/docker-compose-base.yaml
#      service: peer0.org2.example.com
#    networks:
#      - fabricbros
#    depends_on:
#          - orderer.example.com
##################################################################
##################################################################
#  peer1.org2.example.com:
#    container_name: peer1.org2.example.com
#    extends:
#      file:  base/docker-compose-base.yaml
#      service: peer1.org2.example.com
#    networks:
#      - fabricbros
#    depends_on:
#           - orderer.example.com
#           - peer0.org2.example.com
##################################################################
##################################################################
  configtxlator:
      image: hyperledger/fabric-tools${IMAGE_TAG_FABRIC}
      ports:
        - "7059:7059"
      command: /usr/local/bin/configtxlator start
      container_name: configtxlator
      networks:
        - fabricbros
##################################################################
##################################################################
#  ccenv:
#    image: hyperledger/fabric-ccenv${IMAGE_TAG_FABRIC}
